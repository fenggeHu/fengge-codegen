package ${controllerPackage};

import ${entityPackage}.${entityClassName};
import ${paramPackage}.${baseClassName}Param;
#if($tableInfo.allIndexColumns.size() >1)
import ${queryPackage}.${baseClassName}Query;
#end
import ${repositoryPackage}.${repositoryClassName};
#if($_useSwagger)
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;
import java.util.List;

@RestController
#if($_useSwagger)
@Api(tags = "$!{tableInfo.remarks}")
#end
@RequestMapping("/v1/$_name.classNameToPropertyName(${baseClassName})")
public class ${controllerClassName} {
#set($repositoryPropertyName=$_name.classNameToPropertyName(${repositoryClassName}))
    @Autowired
    private $repositoryClassName $repositoryPropertyName;

    @PostMapping("/save")
    public ${entityClassName} save(@RequestBody @Valid ${baseClassName}Param param) {
        ${entityClassName} entity = param.to${entityClassName}();
        ${repositoryPropertyName}.insert(entity);
        return entity;
    }

    @PostMapping("/get")
    public ${entityClassName} get() {
        
        // todo
        return null;
    }
#if($tableInfo.allIndexColumns.size() >1)
    @GetMapping("/list")
    public List<${entityClassName}> list(@RequestBody @Valid ${baseClassName}Query query) {
        query.getPager().calculateStartAndEndRow();
        return ${repositoryPropertyName}.queryWithPaging(query);
    }
#end
}