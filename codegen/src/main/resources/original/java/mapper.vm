package ${mapperPackage};
import org.apache.ibatis.annotations.*;
import ${entityPackage}.${entityClassName};
#if($tableInfo.indexColumns.size() >1)
import ${queryPackage}.${entityClassName}Query;
#end
import java.util.Collection;
import java.util.List;

/**
 * ${tableInfo.remarks} - 表名${tableInfo.name}
 **/
public interface ${entityClassName}Mapper {
    #set($fin=0)
    #set($fin2=0)
    #if("$!{tableInfo.autoIncrementField}"!="")
@Insert("INSERT INTO `${tableInfo.name}`(#foreach($col in $tableInfo.insertColumns)#if(!$col.autoIncrement) #if($fin>0),#else #set($fin = 1) #end `${col.name}`#end#end)" +
    "VALUES(#foreach($col in $tableInfo.insertColumns)#if(!$col.autoIncrement)#if($fin2>0),#else#set($fin2 = 1)#end#{$_nameString.toPropertyName("${col.name}")}#end#end)")
    @Options(useGeneratedKeys = true)
    long insert(${entityClassName} entity);
    #else
@Insert("INSERT INTO `${tableInfo.name}`(#foreach($col in $tableInfo.insertColumns) `${col.name}`#if(${foreach.count}>0),#end#end)" +
    "VALUES(#foreach($col in $tableInfo.insertColumns) #{$_nameString.toPropertyName("${col.name}")} #if(${foreach.count}>0),#end#end)")
    void insert(${entityClassName} entity);
    #end
    /** 批量插入 */
    #set($fin=0)
    #set($fin2=0)
@Insert("<script> " +
"INSERT INTO `${tableInfo.name}`(#foreach($col in $tableInfo.insertColumns)#if(!$col.autoIncrement)#if($fin>0),#else#set($fin = 1)#end`${col.name}`#end#end) VALUES " +
"<foreach collection ='entities' item='item' separator =','>" +
"(#foreach($col in $tableInfo.insertColumns)#if(!$col.autoIncrement)#if($fin2>0),#else#set($fin2 = 1)#end#{item.$_nameString.toPropertyName("${col.name}")}#end#end)" +
"</foreach>" +
"</script>")
void insertBatch(@Param("entities") List<${entityClassName}> entities);

#if($tableInfo.pkColumns.size() > 0)
#set($inx=0)
@Update({"<script>",
"UPDATE `${tableInfo.name}` SET#foreach($col in $tableInfo.updateColumns)#if(!$tableInfo.pkNames.contains(${col.name}))#if($inx>0),#else#set($inx = 1)#end `${col.name}`=#{$_nameString.toPropertyName("${col.name}")}#end#end " +
"WHERE #foreach($pkName in $tableInfo.pkNames)#if(${foreach.index}!=0),#end `$pkName` = #{$_nameString.toPropertyName(${pkName})}#end",
    "</script>" })
    int update(${entityClassName} entity);

@Update({"<script>",
"UPDATE `${tableInfo.name}` SET "+
#foreach($pkName in $tableInfo.pkNames)
#if(${foreach.index}==0)
"`$pkName` = #{$_nameString.toPropertyName(${pkName})}" +
#end
#end
#foreach($col in $tableInfo.updateColumns)
    #if(!$tableInfo.pkNames.contains(${col.name}))
        "<if test='$_nameString.toPropertyName(${col.name})!=null'>, `${col.name}`=#{$_nameString.toPropertyName("${col.name}")}</if>"+ 
    #end
#end
" WHERE #foreach($pkName in $tableInfo.pkNames)#if(${foreach.index}!=0),#end `$pkName` = #{$_nameString.toPropertyName(${pkName})}#end",
    "</script>" })
    int updateSelective(${entityClassName} entity);
#end

#if($tableInfo.pkColumns.size() > 0)
@Select("SELECT * FROM `${tableInfo.name}` WHERE #foreach($pkName in $tableInfo.pkNames) #if(${foreach.index}!=0) AND #end `$pkName` = #{$_nameString.toPropertyName(${pkName})}#end limit 1")
${entityClassName} selectByPrimaryKey(#foreach($pkColumn in $tableInfo.pkColumns) #if(${foreach.index}!=0),#end @Param("$_nameString.toPropertyName(${pkColumn.name})") ${pkColumn.javaType} $_nameString.toPropertyName(${pkColumn.name}) #end);

@Select({"<script>",
    "SELECT * FROM `${tableInfo.name}` WHERE id in ",
    "<foreach collection='ids' item='item' index='index' open='(' separator=',' close=')'>",
        "#{item}",
    "</foreach>",
    "</script>"
})
List<${entityClassName}> selectByIds(@Param("ids") Collection<Long> ids);
#end

#if($tableInfo.ukColumns.size() > 0)
@Select("SELECT * FROM `${tableInfo.name}` WHERE #foreach($ukName in $tableInfo.ukNames) #if(${foreach.index}!=0) AND #end `$ukName` = #{$_nameString.toPropertyName(${ukName})}#end limit 1")
${entityClassName} selectByUniqueKey(#foreach($ukColumn in $tableInfo.ukColumns) #if(${foreach.index}!=0),#end @Param("$_nameString.toPropertyName(${ukColumn.name})") ${ukColumn.javaType} $_nameString.toPropertyName(${ukColumn.name}) #end);
#end

#if($tableInfo.indexColumns.size() >1)
@Select({"<script>",
"SELECT * FROM `${tableInfo.name}` WHERE 1=1 " +
#foreach($col in $tableInfo.indexColumns) 
    "<if test='$_nameString.toPropertyName(${col.name})!=null'> AND `$col.name` = #{$_nameString.toPropertyName(${col.name})}</if>" +
 #end
    " LIMIT 1000</script>" })
List<${entityClassName}> query(${entityClassName}Query query);

@Select({"<script>",
"SELECT * FROM `${tableInfo.name}` WHERE 1=1 " +
#foreach($col in $tableInfo.indexColumns) 
    "<if test='$_nameString.toPropertyName(${col.name})!=null'> AND `$col.name` = #{$_nameString.toPropertyName(${col.name})}</if>" +
 #end
    " LIMIT #{pager.startRow}, #{pager.pageSize}" +
    "</script>" })
List<${entityClassName}> queryWithPaging(${entityClassName}Query query);
#end

}